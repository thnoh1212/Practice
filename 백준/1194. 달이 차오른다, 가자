import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.LinkedList;
import java.util.Queue;

public class Main {
	public static class Point{
		int i;
		int j;
		int k;
		int len;
		public Point(int i, int j, int k, int len) {
			super();
			this.i = i;
			this.j = j;
			this.k = k;
			this.len = len;
		}
		
	}
	
	public static void main(String[] args) throws Exception {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); 
		int[][] moves = {{1,0},{0,1},{-1,0},{0,-1}};
		String[] temp = br.readLine().split(" ");
		int N = Integer.parseInt(temp[0]);
		int M = Integer.parseInt(temp[1]);
		char[][] map = new char[N][M];
		int curI = 0, curJ = 0;
		boolean[][][] visited = new boolean[N][M][1 << 7];
		for(int i = 0; i < N; i++) {
			String Line = br.readLine();
			for(int j = 0; j < M; j++) {
				map[i][j] = Line.charAt(j);
				if(map[i][j] == '0') {
					curI = i;
					curJ = j;
				}
			}
		}
		
		Queue<Point> que = new LinkedList<>();
		visited[curI][curJ][0] = true;
		que.add(new Point(curI, curJ, 0,0));
		
		while(!que.isEmpty()) {
			int i = que.peek().i;
			int j = que.peek().j;
			int k = que.peek().k;
			int len = que.poll().len;
			if(map[i][j] == '1') {
				System.out.println(len);
				return;
			}
			for(int d = 0; d < 4; d++) {
				int next_i = i + moves[d][0];
				int next_j = j + moves[d][1];
				if(next_i < 0 || next_i >= N || next_j < 0 || next_j >= M || map[next_i][next_j] == '#' ||visited[next_i][next_j][k]) continue;
				visited[next_i][next_j][k] = true;
				if(map[next_i][next_j] >= 'a' && map[next_i][next_j] <= 'f') {
					int tk = k | (1 << (map[next_i][next_j] - 'a'));
					visited[next_i][next_j][tk] = true;
					que.add(new Point(next_i, next_j, tk, len+1));
					
				}
				else if(map[next_i][next_j] >= 'A' && map[next_i][next_j] <= 'F') {
					int tk = k & (1 << (map[next_i][next_j] - 'A'));
					if(tk != 0) que.add(new Point(next_i, next_j, k, len+1));
				}
				else{
					que.add(new Point(next_i, next_j, k, len+1));
				}
			}	
		}
		System.out.println(-1);
		
	}
}
